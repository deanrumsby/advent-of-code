# Day 1: Not Quite Lisp

```elixir
Mix.install([
  {:kino, "~> 0.12.0"}
])
```

## Input

```elixir
input = Kino.Input.textarea("Please paste your puzzle input:")
```

## Shared Modules

````elixir
defmodule Santa do
  @doc """
  Returns the next floor number, given an instruction and current floor number

  ## Example
  ```elixir
  iex> Santa.next_floor(")", 34)
  33
  """
  def next_floor(instruction, current_floor) do
    case instruction do
      "(" -> current_floor + 1
      ")" -> current_floor - 1
    end
  end
end
````

## Part 1

We use `Enum.reduce/3` and `Santa.next_floor/2` to track the floor number Santa arrives at after each instruction. 
The final result is our answer.

```elixir
input
|> Kino.Input.read()
|> String.graphemes()
|> Enum.reduce(0, &Santa.next_floor/2)
```

## Part 2

The same process as in part 1, except now we use `Enum.reduce_while/3` and `Stream.with_index/1` to halt the process once we reach the basement level and return the position.

```elixir
input
|> Kino.Input.read()
|> String.graphemes()
|> Stream.with_index()
|> Enum.reduce_while(0, fn
  {_, position}, -1 -> {:halt, position}
  {instruction, _}, floor -> {:cont, Santa.next_floor(instruction, floor)}
end)
```
